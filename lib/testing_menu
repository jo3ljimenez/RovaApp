Scaffold(
        body: FutureBuilder(
          future: fetchProduct(),
          builder: (context, snapshot){
            switch (snapshot.connectionState) {
            case ConnectionState.none:
              return new Center(child: Text('Error: ${snapshot.error}'));              
            case ConnectionState.waiting:
              return new Center(
                child: 
                  Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      CircularProgressIndicator(),
                      SizedBox(height: 20),
                      Text('Cargando')
                  ],
                )
              );
            case ConnectionState.done:
              if(snapshot.hasData && snapshot.data != null){
                return MenuSales(products: snapshot.data);
              }
            break;
            case ConnectionState.active:
            }
            return Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  CircularProgressIndicator(),
                  SizedBox(height: 20),
                  Text('Cargando')
                ],
              )
            );
          } 
        ),
      ),






       child: LayoutBuilder(
        builder: (context, constraint){
          return SingleChildScrollView(
            child: ConstrainedBox(
              constraints: BoxConstraints(minHeight: constraint.maxHeight),
              child: IntrinsicHeight(
                child: Column(
                  children: <Widget>[
                    MenuHeader(),
                   /* Expanded(
                      child: Column(
                        children: <Widget>[
                          Container(
                            height: 600,
                            child: TabSection(listProducts: this.products,),
                          ),
                        ],
                      )
                    ),*/
                  ],
                ),
              ),
            ),
          );
        }
      ),